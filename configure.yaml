---
# configure.yaml
#
# Configuration of the system
# This is done using the newly created settings from the setup.yaml
# Split, because setup.yaml needs root login and we disable that as the last step

### TODO: follow these instructions to the letter and test:
### https://docs.docker.com/engine/install/debian/#install-using-the-repository
# Installs qemu and supporting software and puts home assistant into a virtual server
#
- name: "Configure the system"
  hosts: [neo2, blue]
  remote_user: pragtich
  vars_files:
    - pr8-vault.yaml
  handlers:
    - name: Reboot now
      reboot:
  tasks:
    - name: apt upgrade
      become: yes
      apt:
        update_cache:     yes
        cache_valid_time: 3600
        upgrade:          safe

- name: Install QEMU and related software
  hosts: [blue]
  tasks:
    - name: apt install
      become: yes
      apt:
        cache_valid_time: 60 #seconds
        name:
          - ipxe-qemu
          - libvirt-daemon
          - libvirt-daemon-system
          - qemu-efi-aarch64
          - qemu-efi-arm
          - qemu-system-arm
          - qemu-utils
          - virtinst
          - cloud-utils
          - dnsmasq
          - dmidecode
      notify: Reboot now
            
- name: Create a virtual machine for Homeassistant
  hosts: [blue]
  become: yes
  vars:
    vm_libvirt: "/var/lib/libvirt"
    vm_name: d11c
    vm_dir: "{{vm_libvirt}}/images/{{vm_name}}"
    vm_image_url: "https://cloud.debian.org/images/cloud/bullseye/latest/debian-11-generic-arm64.qcow2"
    vm_image: "{{vm_libvirt}}/templates/{{vm_name}}"
    vm_rootdisk: "{{vm_libvirt}}/{{vm_name}}/root-disk.qcow2"
    vm_size: "32G"
    vm_memory: "2048"
    vm_config: "{{vm_libvirt}}/{{vm_name}}/cloud-init.cfg"
    vm_config_iso: "{{vm_libvirt}}/{{vm_name}}/cloud-init.iso"
    vm_cpus: 1
    vm_maxcpus: 4

  tasks:
    - name: Stop the VM if it's already running
      shell:
        cmd: "virsh shutdown {{vm_name}}; virsh undefine {{vm_name}}"
      ignore_errors: yes
    - name: Create folders
      file:
        state: directory
        path: "{{item}}"
      loop:
        - "{{vm_dir}}"
        - "/var/lib/libvirt/templates"
        - "/var/lib/libvirt/images"
        - "/var/lib/libvirt/{{vm_name}}"
      
    - name: Fetch the OS image
      get_url:
        dest: "{{vm_image}}"
        url: "{{vm_image_url}}"
    - name: Convert the OS image
      shell:
        cmd: "qemu-img convert -f qcow2 -O qcow2 {{vm_image}} {{vm_rootdisk}}"
    - name: Resize the OS image
      shell:
        cmd: "qemu-img resize {{vm_rootdisk}} {{vm_size}}"
    - name: Create the configuration file
      copy:
        src: "cloud-init.cfg"
        dest: "{{vm_config}}"
    - name: Convert the configuration file
      shell:
        cmd: "cloud-localds {{vm_config_iso}} {{vm_config}}"
    - name: Install/import the OS into a VM
      shell:
        cmd: "virt-install --name {{vm_name}} --memory {{vm_memory}} --vcpus {{vm_cpus}},{{vm_maxcpus}} --cpu host --disk {{vm_rootdisk}},device=disk,bus=virtio --disk {{vm_config_iso}},device=cdrom --os-type linux --os-variant debian10 --virt-type kvm --graphics none --network network=default,model=virtio --import --noautoconsole"
  
- name: Finalize with sudo rights
  remote_user: pragtich
  hosts: [neo2, blue]

  tasks:
    - name: Get my profile dotfiles
      git:
        repo: 'https://github.com/pragtich/dotfiles.git'
        dest: '~/.dotfiles'
        force: yes
    - name: Install my profile dotfiles
      shell: ~/.dotfiles/install.sh
      args:
        chdir: ~/.dotfiles/
 
